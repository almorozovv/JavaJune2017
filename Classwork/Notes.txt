Object

A

B

Test First

Test Driven Development TDD


JRE  Java Runtime  Environment



2WN  Radix 8000000
1.4NlogN  28000000 


snap = "!snapshot() { COMMENT=work-in-progress; if [ \"$*\" ]; then COMMENT=\"$*\"; fi; git add -A; git commit -m \"$COMMENT\"; }; snapshot"

Queue  FIFO  First In First Out
Stack Магазин  LIFO  Last In First Out
push
pop
tos (tops of stack), top, peek
size  

 ^  tos 
 | 
 |  
___  bottom
  
upside down  
-----------  bottom
|
|
V   tos


Left to right
|A
push A
push B
push C
pop  -> C
pop  -> B
tos -> A

Memory Leak
|MMMMMMMMMMMMMMMMMMMMMM
                       ^
Public               public
Protected            protected
Default (Package)    
Private              private
  
  is-a

Старая версия Solitare от Timothy Budd
http://csweb.cs.wfu.edu/~burg/Courses/Fall99/CSC361/course-materials/JavaExamples/Solitare.java

first  [   V]
       [   V]
       [   X]


SOLID

Inheritance Forms

Specialization *  is-a  Liskov Substitution Principle    
Specification *   is-a 
Construction *    NO is-a!
Generalization *  is-a ?
Extension *    is-a
Restriction *  NO is-a!
Variation  *  NO is-a!
Combination *  not implemented in Java for classes


Nested:   Static, Inner, Local, Anonymous   SILA

 

boilerplate code


E   element type
K   key type
V   value type
N   number
T   type
S   other type
U   other type
V   other type

JIT  Just In Time compilation
warmup

JVM  Java Virtual Machine

13 18 5

Information:  extract, store, transfer, process
Process: analyze ,  search,  update,   transpose


1) элементарная: бумага и ручка
2) средняя: на знание алгоритма
3) логические, или на поиск решения
4) правильное и эффективное решение, автоматические тесты
5) TDD

Задача "бумага и ручка"
Дан квадратный массив целых чисел. Определить, является ли он 
симметричным относительно своей главной диагонали.

1 2 3
2 5 0
3 0 6

1 2 3    0 0 0 0   h = 1  v = 0   r += v c += v
8 9 4    0 0 0 0
7 6 5    0 0 0 0


N = 1_000_000
W = 50
k = 0.2
c = 2

hash  ->  c * N * W                    -->>> 100_000_000
quick sort  ->  1.4 * k * W * N * Log N -->>> 280_000_000

Sort algorithms:
Selection, Insertion, HeapSort, Quick Sort, Merge Sort, Radix Sort (Counting sort)

List Queue Deque Stack  Priority Queue
HashSet/HashMap  TreeSet/TreeMap
LinkedHashMap/LinkedHashSet
  
  
Source ->  Transformations... ->  Terminal Operations   
  
FixedRate  
[----]  
<----->[----]
              [----]  
FixedDelay  
[----]
      <----->[----]  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
